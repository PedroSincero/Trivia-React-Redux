{"version":3,"sources":["services/helpers/randomizeRes.js","redux/actions/index.js","services/helpers/localStorage.js","assets/images/headerBigodes.png","pages/Login.jsx","services/helpers/getAvatar.js","components/Header.jsx","components/Cronometer.jsx","pages/Game.jsx","pages/Config.jsx","components/Buttons.jsx","components/FeedbackMessage.jsx","components/ButtonFeed.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","redux/reducers/userReducer.js","redux/reducers/configReducer.js","redux/reducers/loginReducer.js","redux/reducers/questReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["randomize","data","results","map","question","correctAnswer","correct_answer","incorretAnswer","incorrect_answers","newArray","arr","i","length","j","Math","floor","random","randomArray","randomAnswers","ADD_TOKEN","ADD_IMG_URL","ADD_USER_INFO","ADD_QUESTION","REQUEST_API","SUBTRACT_TIMER","UPDATE_ID","UPDATE_POINTS","TOTAL_SCORE","RESET_SOMETHING","CHANGE_CONFIG","resetSomething","something","type","payload","getFromLocalStorage","key","storedItem","localStorage","getItem","JSON","parse","setOnLocalStorage","value","itemToBeStored","stringify","setItem","updateLocalStorage","retrievedItem","newItem","Object","keys","reduce","_","constructNewObject","stringfiedItem","Login","props","state","name","email","verifyLogin","bind","handleChange","saveInLocalStorage","tokenAPI","this","target","setState","setUserInfo","history","tokenUser","somethingReset","player","gravatarEmail","id","timer","score","totalScore","assertions","push","response","token","className","src","triviaBigodesLogo","alt","data-testid","placeholder","onChange","htmlFor","disabled","onClick","to","Component","connect","loginReducer","dispatch","a","fetch","json","console","log","username","addUserInfo","getAvatar","treatedEmail","trim","toLowerCase","MD5","Header","updateUrlImg","imgUrl","updatedScore","defaultProps","userReducer","picture","user","questReducer","url","Cronometer","seconds","startTimer","prevProps","checkAnswer","answered","idAPI","clearInterval","cronometerInterval","setInterval","timerSubtract","globalTimer","teste","subtractTimer","INITIAL_STATE","isDisabled","nextButton","Game","checkDisabled","nextQuestion","handleButton","getQuestion","questTrivia","category","difficulty","setNextQuestion","nameUser","summedScore","infoRanking","arrayStorage","isCorrect","addScore","doCalculation","questAPI","points","correct","atob","incorrect","index","incorrectAnswers","includes","handleIncorrectAnswer","handleCorrectAnswer","isLoading","renderAlternatives","loading","configReducer","config","catConfig","difConfig","typeConfig","localToken","newData","fetchQuestions","newId","updtPoints","updatePoints","categories","Config","renderCategories","updateCategories","renderDifficulty","renderType","res","trivia_categories","handleChangeConfig","currentCategory","changeConfig","BtnRanking","accept","assertion","FeedbackMessage","RenderFeedbackMessage","ButtonFeed","redirect","redirectLogin","Feedback","renderFinalMessage","Ranking","handlesort","sort","b","element","App","exact","path","component","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9352da1d.chunk.js","sourcesContent":["const randomArray = (arr) => {\n  // Loop em todos os elementos\n  for (let i = arr.length - 1; i > 0; i -= 1) {\n    // Escolhendo elemento aleatório\n    const j = Math.floor(Math.random() * (i + 1));\n    // Reposicionando elemento\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  // Retornando array com aleatoriedade\n  return arr;\n};\n\nconst randomize = (data) => data.results.map((question) => {\n  const correctAnswer = question.correct_answer;\n  const incorretAnswer = question.incorrect_answers;\n  const newArray = randomArray([correctAnswer, ...incorretAnswer]);\n  question.randomAnswers = newArray;\n  return question;\n});\n\nexport default randomize;\n","import randomize from '../../services/helpers/randomizeRes';\n\nexport const ADD_TOKEN = 'GET_TOKEN';\nexport const ADD_IMG_URL = 'ADD_IMG_URL';\nexport const ADD_USER_INFO = 'ADD_USER_INFO';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const REQUEST_API = 'REQUEST_API';\nexport const RESET_TIMER = 'RESET_TIMER';\nexport const SUBTRACT_TIMER = 'SUBTRACT_TIMER';\nexport const UPDATE_ID = 'UPDATE_ID';\nexport const UPDATE_POINTS = 'UPDATE_POINTS';\nexport const TOTAL_SCORE = 'TOTAL_SCORE';\nexport const RESET_SOMETHING = 'RESET_SOMETHING';\nexport const CHANGE_CONFIG = 'CHANGE_CONFIG';\n\nexport const getToken = (token) => ({\n  type: ADD_TOKEN,\n  token,\n});\n\nexport const subtractTimer = (timer) => ({\n  type: SUBTRACT_TIMER,\n  timer,\n});\n\nexport const resetSomething = (something) => ({\n  type: RESET_SOMETHING,\n  payload: something,\n});\n\nexport const fetchToken = () => async (dispatch) => {\n  try {\n    const response = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await response.json();\n    dispatch(getToken(data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateId = (id) => ({\n  type: UPDATE_ID,\n  id,\n});\n\n// Recebe uma url de imagem para o avatar\nexport const addImage = (img) => ({\n  type: ADD_IMG_URL,\n  payload: img,\n});\n\n// Recebe um nome de usuário e email e passa para o redux.\nexport const addUserInfo = (username, email) => ({\n  type: ADD_USER_INFO,\n  payload: { username, email },\n});\n// ----- REQ 5\nexport const getQuestion = (question) => ({\n  type: ADD_QUESTION,\n  question,\n  loading: false,\n});\n\nexport const requestAPI = () => ({\n  type: REQUEST_API,\n  loading: true,\n});\n\nexport const updatePoints = (score) => ({\n  type: UPDATE_POINTS,\n  score,\n});\n\nexport const totalScore = (score) => ({\n  type: TOTAL_SCORE,\n  score,\n});\n\nexport const changeConfig = (value, name) => ({\n  type: CHANGE_CONFIG,\n  payload: { value, name },\n});\n\nexport function fetchQuestions({ category, difficulty, type }) {\n  const catConfig = category === 'any' ? '' : `category=${category}&`;\n  const difConfig = difficulty === 'any' ? '' : `difficulty=${difficulty}&`;\n  const typeConfig = type === 'any' ? '' : `type=${type}&`;\n  return async (dispatch) => {\n    try {\n      dispatch(requestAPI());\n      const localToken = localStorage.getItem('token');\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&${catConfig}${difConfig}${typeConfig}encode=base64&token=${localToken}`);\n      const data = await response.json();\n      const newData = randomize(data);\n      dispatch(getQuestion(newData));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","// Retorna algo persistido no localstorage buscando pela sua chave \"key\" !!Tem de ser String!!\nexport const getFromLocalStorage = (key) => {\n  const storedItem = localStorage.getItem(key);\n  return JSON.parse(storedItem);\n};\n\n// Persiste algo no localstorage, tem de passar uma chave e o valor que será parseado para string.\nexport const setOnLocalStorage = (key, value) => {\n  let itemToBeStored = value;\n  if (typeof value === 'object') itemToBeStored = JSON.stringify(value);\n  localStorage.setItem(key, itemToBeStored);\n};\n\n// Atualiza do local storage\n\n// Recebe o value a ser atualizado e o valor retornado do localstorage/\n// Cria um novo objeto iterando sobre as keys dos item retornado.\n// Dentro do reduce é criado um novo objeto e então é verificado se o valor a ser atualizado já existe no local storage. Se existir então é feito a atualização\n// Se não retorna o a chave com o valor já existente, pois não necessita alteração.\n\nconst constructNewObject = (value, retrievedItem) => {\n  const newObject = Object.keys(retrievedItem)\n    .reduce((_, key) => {\n      if (retrievedItem[key] && value[key]) {\n        return { [key]: { ...retrievedItem[key], ...value[key] } };\n      }\n      return retrievedItem[key];\n    }, {});\n  return newObject;\n};\n\n// Atualiza algo no localstorage, tem de passar uma chave e o valor que será atualizado.\nexport const updateLocalStorage = (key, value) => {\n  const retrievedItem = getFromLocalStorage(key);\n  if (typeof value === 'object') {\n    const newItem = constructNewObject(value, retrievedItem);\n    const stringfiedItem = JSON.stringify(newItem);\n    localStorage.setItem(key, stringfiedItem);\n  } else {\n    localStorage.setItem(key, value);\n  }\n};\n","export default __webpack_public_path__ + \"static/media/headerBigodes.916d31f3.png\";","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { addUserInfo, fetchToken, resetSomething } from '../redux/actions';\nimport { setOnLocalStorage } from '../services/helpers/localStorage';\nimport triviaBigodesLogo from '../assets/images/headerBigodes.png';\nimport \"../style/Login.css\"\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n    };\n    this.verifyLogin = this.verifyLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    const { tokenAPI } = this.props;\n    tokenAPI();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  verifyLogin() {\n    const { name, email } = this.state;\n    return !(name && email);\n  }\n\n  saveInLocalStorage() {\n    const { email, name } = this.state;\n    const { setUserInfo, history, tokenUser, somethingReset } = this.props;\n\n    setUserInfo(name, email);\n    const userInfo = { player: { name, gravatarEmail: email } };\n    setOnLocalStorage('state', userInfo);\n\n    somethingReset({ id: 0,\n      timer: 30,\n      score: 0,\n      totalScore: 0,\n      assertions: 0,\n    });\n\n    history.push('/game');\n\n    const response = tokenUser.token;\n    localStorage.setItem('token', response);\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div\n        className=\"flex justify-center items-center w-screen\n        h-screen bg-light_gray_color\"\n      >\n        <form\n          className=\"flex flex-col items-center bg-primary_color\n          shadow-lg min-w-1/4 min-h-1/4 rounded-lg\"\n        >\n          <img\n            className=\"w-40 mt-8 mb-10\"\n            src={ triviaBigodesLogo }\n            alt=\"Logo trivia Bigodes\"\n          />\n          <div className=\"flex flex-col mb-4 w-2/3 login__control\">\n            <input\n              data-testid=\"input-player-name\"\n              className=\"rounded pl-2 border border-light_gray_color login__input\"\n              name=\"name\"\n              id=\"name\"\n              value={ name }\n              placeholder=\".\"\n              onChange={ this.handleChange }\n            />\n            <label className=\"login__label\" htmlFor=\"name\">Your Name</label>\n          </div>\n          <div className=\"flex flex-col mb-4 w-2/3 login__control\">\n          <input\n            data-testid=\"input-gravatar-email\"\n            type=\"email\"\n            className=\"rounded pl-2 border border-light_gray_color login__input\"\n            name=\"email\"\n            id=\"email\"\n            value={ email }\n            placeholder=\".\"\n            onChange={ this.handleChange }\n          />\n          <label className=\"login__label\" htmlFor=\"email\">Your Email</label>\n          </div>\n          \n          <div className=\"w-2/3 flex justify-between mb-10\">\n          <button\n            type=\"button\"\n            className=\"bg-secundary_color text-white px-4 py-1 rounded login__button-effects\"\n            data-testid=\"btn-play\"\n            disabled={ this.verifyLogin() }\n            onClick={ () => this.saveInLocalStorage() }\n          >\n            Play\n          </button>\n          <Link to=\"/config\">\n            <button\n              type=\"button\"\n              className=\"bg-secundary_color text-white px-4 py-1 rounded login__button-effects\"\n              data-testid=\"btn-settings\"\n            >\n              Settings\n            </button>\n          </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tokenUser: state.loginReducer.tokenUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  tokenAPI: () => dispatch(fetchToken()),\n  setUserInfo: (username, email) => dispatch(addUserInfo(username, email)),\n  somethingReset: (something) => dispatch(resetSomething(something)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  setUserInfo: PropTypes.func.isRequired,\n  tokenUser: PropTypes.string.isRequired,\n  tokenAPI: PropTypes.func.isRequired,\n  somethingReset: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { MD5 } from 'crypto-js';\n\n// Recebe um email, trata ele com MD5, cria um hash e devolve a url do avatar do usuario\nconst getAvatar = (email) => {\n  const treatedEmail = email.trim().toLowerCase();\n  const URL = 'https://www.gravatar.com/avatar/';\n  const hash = MD5(treatedEmail);\n  return URL + hash;\n};\n\nexport default getAvatar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getAvatar from '../services/helpers/getAvatar';\nimport { addImage } from '../redux/actions';\nimport triviaBigodesLogo from '../assets/images/headerBigodes.png';\nimport '../style/Header.css';\n\nclass Header extends Component {\n  // Recebe um email como props do estado global e pega o avatar desse email\n  componentDidMount() {\n    const { email, updateUrlImg } = this.props;\n    const imgUrl = getAvatar(email);\n    updateUrlImg(imgUrl);\n  }\n\n  render() {\n    const { username, imgUrl, updatedScore } = this.props;\n\n    return (\n      <div className=\"flex bg-primary_color justify-around py-5\">\n        <img\n          data-testid=\"header-profile-picture\"\n          className=\"header__avatar w-30 rounded-lg\"\n          src={ imgUrl }\n          alt={ `avatar of ${username}` }\n        />\n        <img\n          className=\"w-60\"\n          src={ triviaBigodesLogo }\n          alt=\"Logo trivia Bigodes\"\n        />\n\n        <div className=\"flex flex-col justify-center items-center bg-primary_color\">\n          <p\n            data-testid=\"header-player-name\"\n            className=\"header__username py-2 text-2xl\"\n          > \n            {username}\n          </p>\n          <p className=\"text-2xl\">Score:{' '}<span data-testid=\"header-score\"><strong>{updatedScore}</strong></span> </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  username: PropTypes.string,\n  imgUrl: PropTypes.string,\n  updateUrlImg: PropTypes.func.isRequired,\n  updatedScore: PropTypes.number,\n};\n\nHeader.defaultProps = {\n  email: 'pessoa@email.com',\n  username: 'pessoa',\n  imgUrl: 'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50',\n  updatedScore: 0,\n};\n\nconst mapStateToProps = (state) => ({\n  imgUrl: state.userReducer.picture,\n  username: state.userReducer.user,\n  email: state.userReducer.email,\n  updatedScore: state.questReducer.totalScore,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateUrlImg: (url) => dispatch(addImage(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { subtractTimer } from '../redux/actions';\n\nclass Cronometer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 30 };\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  // if o answer for false\n  componentDidUpdate(prevProps) {\n    const { disabled, checkAnswer, timer, answered, idAPI } = this.props;\n    if (idAPI !== prevProps.idAPI) {\n      this.startTimer();\n    }\n    if (answered) {\n      clearInterval(this.cronometerInterval);\n    }\n\n    const MAX_SECONDS = 0;\n    if (timer === MAX_SECONDS) {\n      checkAnswer();\n      disabled();\n      clearInterval(this.cronometerInterval);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.cronometerInterval);\n  }\n\n  startTimer() {\n    const ONE_SECOND = 1000;\n    this.cronometerInterval = setInterval(() => {\n      const { timerSubtract, timer: globalTimer } = this.props;\n      this.setState((teste) => ({ seconds: teste.seconds - 1 }));\n      timerSubtract(globalTimer - 1);\n    }, ONE_SECOND);\n  }\n\n  render() {\n    const { timer } = this.props;\n    return (\n      <div>\n        <p className=\"text-5xl text-gray-50\">\n          {timer}\n        </p>\n      </div>\n    );\n  }\n}\n\nCronometer.propTypes = {\n  disabled: PropTypes.func.isRequired,\n  checkAnswer: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n  timerSubtract: PropTypes.func.isRequired,\n  answered: PropTypes.bool.isRequired,\n  idAPI: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  timer: state.questReducer.timer,\n  idAPI: state.questReducer.id,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  timerSubtract: (timer) => dispatch(subtractTimer(timer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cronometer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport \"../style/Game.css\";\nimport {\n  fetchQuestions,\n  updateId,\n  updatePoints,\n  totalScore,\n  resetSomething,\n} from \"../redux/actions\";\nimport {\n  updateLocalStorage,\n  setOnLocalStorage,\n  getFromLocalStorage,\n} from \"../services/helpers/localStorage\";\nimport Cronometer from \"../components/Cronometer\";\nconst INITIAL_STATE = {\n  answered: false,\n  assertions: 0,\n  score: 0,\n  isDisabled: false,\n  nextButton: false,\n};\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.checkDisabled = this.checkDisabled.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.getQuestion = this.getQuestion.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getQuestion();\n  }\n\n  async getQuestion() {\n    const { questTrivia, category, difficulty, type } = this.props;\n    const { score, assertions } = this.state;\n    await questTrivia({ category, difficulty, type });\n    updateLocalStorage(\"state\", { player: { score, assertions } });\n  }\n\n  nextQuestion() {\n    const { idAPI, setNextQuestion, somethingReset, history, nameUser, picture, summedScore } =\n      this.props;\n    const FOUR = 4;\n    if (idAPI < FOUR) {\n      setNextQuestion(idAPI + 1);\n      this.setState({ answered: false });\n      somethingReset({ timer: 30 });\n      this.setState({ isDisabled: false, nextButton: false });\n    } else {\n      const infoRanking = [{ name: nameUser, score: summedScore, picture }];\n      const arrayStorage = getFromLocalStorage(\"ranking\");\n      if (arrayStorage) {\n        setOnLocalStorage(\"ranking\", [...arrayStorage, ...infoRanking]);\n      } else {\n        setOnLocalStorage(\"ranking\", infoRanking);\n      }\n      history.push(\"/feedback\");\n    }\n  }\n\n  checkAnswer(isCorrect) {\n    const { answered } = this.state;\n    if (answered) return;\n    if (isCorrect) {\n      const { addScore, assertions, summedScore } = this.props;\n      const score = this.doCalculation();\n      const updatedScore = score + summedScore;\n      updateLocalStorage(\"state\", { player: { score: updatedScore, assertions: assertions + 1 } });\n      addScore(score);\n    }\n    this.setState({ answered: true, nextButton: true });\n  }\n\n  checkDisabled() {\n    this.setState({ isDisabled: true });\n  }\n\n  // Calculo: 10 pontos estaticos\n  // valor do timer\n  // Difficulty: hard = 3, med = 2, easy =1\n  doCalculation() {\n    const { questAPI, idAPI, timer } = this.props;\n    const { difficulty } = questAPI[idAPI];\n    const staticPoint = 10;\n    let points = 1;\n    const TRES = 3;\n    switch (difficulty) {\n      case \"hard\":\n        points = TRES;\n        break;\n      case \"medium\":\n        points = 2;\n        break;\n      default:\n        points = 1;\n    }\n    return staticPoint + points * timer;\n  }\n\n  handleCorrectAnswer(correct) {\n    const { answered, isDisabled } = this.state;\n    return (\n      <button\n        type=\"button\"\n        onClick={() => this.checkAnswer(true)}\n        data-testid=\"correct-answer\"\n        className={`w-1/3 m-2 bg-yellow_dead_color rounded focus:outline-none ${\n          answered &&\n          \"border border-green-500 bg-green_color text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n        }`}\n        disabled={isDisabled}\n      >\n        {atob(correct)}\n      </button>\n    );\n  }\n\n  handleIncorrectAnswer(incorrect, index) {\n    const { answered, isDisabled } = this.state;\n    return (\n      <button\n        type=\"button\"\n        onClick={() => this.checkAnswer()}\n        data-testid={`wrong-answer-${index}`}\n        className={`w-1/3 m-2 bg-yellow_dead_color rounded focus:outline-none ${\n          answered &&\n          \"border border-red-500 bg-red_color text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline\"\n        }`}\n        disabled={isDisabled}\n      >\n        {atob(incorrect)}\n      </button>\n    );\n  }\n\n  handleButton() {\n    return (\n      <button\n        className=\"text-5xl bg-primary_color px-6 py-1 rounded \"\n        type=\"button\"\n        data-testid=\"btn-next\"\n        onClick={() => {\n          this.nextQuestion();\n        }}\n      >\n        Next\n      </button>\n    );\n  }\n\n  renderAlternatives() {\n    const { questAPI, idAPI } = this.props;\n    const { randomAnswers, incorrect_answers: incorrectAnswers } = questAPI[idAPI];\n    return randomAnswers.map((question, index) => {\n      if (incorrectAnswers.includes(question)) {\n        return this.handleIncorrectAnswer(question, index);\n      }\n      return this.handleCorrectAnswer(question);\n    });\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    const { nextButton } = this.state;\n    if (!isLoading) {\n      const { questAPI, idAPI } = this.props;\n      const { answered } = this.state;\n      const { category, question } = questAPI[idAPI];\n      return (\n        <div className=\"flex-col\">\n          <Header />\n          <div\n            className=\"flex-col grid justify-items-center bg-secundary_color w-screen\n                 h-screen game__body\"\n          >\n            <h3 className=\"pt-12 text-3xl text-gray-50\" data-testid=\"question-text\">\n              {atob(question)}\n            </h3>\n            <section className=\"flex flex-wrap w-3/4 justify-center text-3xl text-gray-50\">\n              {this.renderAlternatives()}\n            </section>\n            <div className=\"flex w-screen justify-between\">\n              <div className=\"w-1/3\">\n                <h3 className=\"block\ttext-white mt-44 ml-20 text-lg\">Category:</h3>\n                <h4\n                  className=\"items-center text-3xl text-gray-50 ml-20\"\n                  data-testid=\"question-category\"\n                >\n                  {atob(category)}\n                </h4>\n              </div>\n              <div className=\"w-1/3 flex items-center justify-center\">\n                <Cronometer\n                  answered={answered}\n                  disabled={this.checkDisabled}\n                  checkAnswer={this.checkAnswer}\n                />\n              </div>\n              <div className=\"w-1/3 flex items-center justify-center\">\n                <p>.{nextButton && this.handleButton()}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"moustache__container\">\n        <div className=\"moustache__anim\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questAPI: state.questReducer.question,\n  isLoading: state.questReducer.loading,\n  idAPI: state.questReducer.id,\n  timer: state.questReducer.timer,\n  assertions: state.questReducer.assertions,\n  nameUser: state.userReducer.user,\n  email: state.userReducer.email,\n  picture: state.userReducer.picture,\n  summedScore: state.questReducer.totalScore,\n  category: state.configReducer.category,\n  difficulty: state.configReducer.difficulty,\n  type: state.configReducer.type,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  questTrivia: (config) => dispatch(fetchQuestions(config)),\n  setNextQuestion: (newId) => dispatch(updateId(newId)),\n  somethingReset: (something) => dispatch(resetSomething(something)),\n  updtPoints: (score) => dispatch(updatePoints(score)),\n  addScore: (score) => dispatch(totalScore(score)),\n});\n\nGame.propTypes = {\n  questAPI: PropTypes.func.isRequired,\n  questTrivia: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  idAPI: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  somethingReset: PropTypes.func.isRequired,\n  assertions: PropTypes.number.isRequired,\n  summedScore: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  addScore: PropTypes.func.isRequired,\n  nameUser: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\n// Agradecimentos ao Site https://www.horadecodar.com.br/2021/05/10/como-embaralhar-um-array-em-javascript-shuffle/\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { changeConfig } from \"../redux/actions\";\nimport triviaBigodesLogo from \"../assets/images/headerBigodes.png\";\nimport \"../style/Moustache.css\";\n\nconst INITIAL_STATE = {\n  categories: [],\n};\n\nclass Config extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n    this.renderCategories = this.renderCategories.bind(this);\n    this.updateCategories = this.updateCategories.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n    this.renderType = this.renderType.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = await (await fetch(\"https://opentdb.com/api_category.php\")).json();\n    this.updateCategories(res.trivia_categories);\n  }\n\n  updateCategories(categories) {\n    this.setState({ categories });\n  }\n\n  handleChange({ target: { value, name } }) {\n    const { handleChangeConfig } = this.props;\n    handleChangeConfig(value, name);\n  }\n\n  renderCategories() {\n    const { categories } = this.state;\n    const { category } = this.props;\n    return (\n      <div className=\"w-100 mb-5 flex flex-col items-center\">\n        <div className=\"flex mb-3 justify-center items-center font-medium\">\n          <label htmlFor=\"categoryId\">Select Category</label>\n        </div>\n        <select\n          className=\"w-3/4 h-8 pl-3 pr-6 text-base placeholder-secundary_color border rounded-lg appearance-none focus:shadow-outline\"\n          value={category}\n          onChange={this.handleChange}\n          name=\"category\"\n          id=\"categoryId\"\n        >\n          <option className=\"\" value=\"any\">\n            Any Category\n          </option>\n          {categories.map((currentCategory) => {\n            const { name, id } = currentCategory;\n            return (\n              <option key={name} value={id}>\n                {name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n\n  renderDifficulty() {\n    const { difficulty } = this.props;\n    return (\n      <div className=\"w-100 my-2 mr-3\">\n        <div className=\"flex justify-center items-center mb-3 font-medium\">\n          <label htmlFor=\"difficulty\">Select Difficulty</label>\n        </div>\n        <select\n          className=\"w-full h-8 pl-3 pr-6 text-base placeholder-secundary_color border rounded-lg appearance-none focus:shadow-outline\"\n          value={difficulty}\n          onChange={this.handleChange}\n          name=\"difficulty\"\n          id=\"difficulty\"\n        >\n          <option name=\"difficulty\" value=\"any\">\n            Any Difficulty\n          </option>\n          <option name=\"difficulty\" value=\"easy\">\n            easy\n          </option>\n          <option name=\"difficulty\" value=\"medium\">\n            medium\n          </option>\n          <option name=\"difficulty\" value=\"hard\">\n            hard\n          </option>\n        </select>\n      </div>\n    );\n  }\n\n  renderType() {\n    const { type } = this.props;\n    return (\n      <div className=\"w-100 my-2 ml-3\">\n        <div className=\"flex justify-center items-center mb-3 font-medium\">\n          <label htmlFor=\"type\">Select Type</label>\n        </div>\n        <select\n          className=\"w-full h-8 pl-3 pr-6 text-base placeholder-secundary_color border rounded-lg appearance-none focus:shadow-outline\"\n          value={type}\n          onChange={this.handleChange}\n          name=\"type\"\n          id=\"type\"\n        >\n          <option value=\"any\">Any Type</option>\n          <option value=\"multiple\">Multiple Choice</option>\n          <option value=\"boolean\">True or False</option>\n        </select>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col justify-center items-center w-screen h-screen bg-secundary_color\">\n        <section className=\"flex flex-col items-center bg-primary_color min-w-800 min-h-1/4 rounded-2xl\">\n          <img className=\"w-60 my-3\" src={triviaBigodesLogo} alt=\"Logo trivia Bigodes\" />\n          <h1 className=\"text-2xl my-8\" data-testid=\"settings-title\">\n            <strong>SETTINGS</strong>\n          </h1>\n          {this.renderCategories()}\n          <div className=\"flex flex-row\">\n            {this.renderDifficulty()}\n            {this.renderType()}\n          </div>\n          <button className=\"text-1xl text-white mt-8 mb-8 bg-secundary_color px-4 py-1 rounded \">\n            <Link to=\"/\">SAVE</Link>\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nConfig.propTypes = {\n  handleChangeConfig: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  category: state.configReducer.category,\n  difficulty: state.configReducer.difficulty,\n  type: state.configReducer.type,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleChangeConfig: (value, name) => dispatch(changeConfig(value, name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Config);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class BtnRanking extends Component {\n  render() {\n    return (\n      <Link\n        to=\"/ranking\"\n        className=\"border border-gray-700 bg-gray-700 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-800 focus:outline-none focus:shadow-outline\"\n      >\n        <button type=\"button\" data-testid=\"btn-ranking\">\n          Show Ranking\n        </button>\n      </Link>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst accept = (assertion) => (\n  <p>\n    Você acertou\n    <span data-testid=\"feedback-total-question\">\n      {' '}\n      {assertion}\n    </span>\n    {' '}\n    pergunta!\n  </p>\n);\nclass FeedbackMessage extends Component {\n  messageFeedback(assertions) {\n    if (assertions === 1) {\n      return accept(assertions);\n    }\n    if (assertions > 1) {\n      return (\n        <p>\n          Você acertou\n          <span data-testid=\"feedback-total-question\">\n            {' '}\n            {assertions}\n          </span>\n          {' '}\n          perguntas!\n        </p>\n      );\n    }\n\n    return accept(assertions);\n  }\n\n  messageScore(score) {\n    if (score > 1) {\n      return (\n        <p>\n          Um total de\n          {' '}\n          <span data-testid=\"feedback-total-score\">\n            {score}\n          </span>\n          {' '}\n          pontos`\n        </p>\n      );\n    }\n    return (\n      <p>\n        Um total de\n        {' '}\n        <span data-testid=\"feedback-total-score\">\n          {score}\n        </span>\n        {' '}\n        ponto`\n      </p>\n    );\n  }\n\n  RenderFeedbackMessage() {\n    const { assertions, summedScore } = this.props;\n    return (\n      <div className=\"flex justify-center \">\n        <p data-testid=\"feedback-total-score\" className=\"p-16\">{` Score ${summedScore}`}</p>\n        <p data-testid=\"feedback-total-question\" className=\"p-16\">{` Assertions ${assertions}`}</p>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.RenderFeedbackMessage()}\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  summedScore: state.questReducer.totalScore,\n  assertions: state.questReducer.assertions,\n});\n\nFeedbackMessage.propTypes = {\n  summedScore: PropTypes.number,\n  assertions: PropTypes.number,\n};\n\nFeedbackMessage.defaultProps = {\n  summedScore: 0,\n  assertions: 0,\n};\n\nexport default connect(mapStateToProps)(FeedbackMessage);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nclass ButtonFeed extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n    };\n    this.redirectLogin = this.redirectLogin.bind(this);\n  }\n\n  redirectLogin() {\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { redirect } = this.state;\n    return (\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={this.redirectLogin}\n          className=\"border border-gray-700 bg-gray-700 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-gray-800 focus:outline-none focus:shadow-outline\"\n        >\n          Play Again\n        </button>\n        {redirect && <Redirect />}\n      </div>\n    );\n  }\n}\n\nButtonFeed.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ButtonFeed;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport BtnRanking from \"../components/Buttons\";\nimport FeedbackMessage from \"../components/FeedbackMessage\";\nimport ButtonFeed from \"../components/ButtonFeed\";\nimport \"../style/Feedback.css\";\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.renderFinalMessage = this.renderFinalMessage.bind(this);\n  }\n\n  renderFinalMessage() {\n    const { assertions } = this.props;\n    const minimumScore = 3;\n    return assertions >= minimumScore ? \"Very Well!\" : \"Could be better...\";\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"flex justify-center bg-light_gray_color h-screen feedback__body\">\n          <div className=\"flex flex-col items-center mt-36 text-white bg-secundary_color min-w-600 max-h-80 rounded-2xl shadow-lg \">\n            <h1 data-testid=\"feedback-text\" className=\"mt-8 font-bold text-xl\">\n              {this.renderFinalMessage()}\n            </h1>\n            <FeedbackMessage />\n            <div className=\"flex justify-center\">\n              <BtnRanking />\n              <ButtonFeed />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n};\n\nFeedback.defaultProps = {\n  assertions: 0,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.questReducer.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport triviaBigodesLogo from \"../assets/images/headerBigodes.png\";\nimport { getFromLocalStorage } from \"../services/helpers/localStorage\";\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.handlesort = this.handlesort.bind(this);\n  }\n\n  handlesort() {\n    const scoreRanking = getFromLocalStorage(\"ranking\");\n    return scoreRanking.sort((a, b) => b.score - a.score);\n  }\n\n  render() {\n    return (\n      <div className=\"bg-light_gray_color flex h-screen flex-col items-center \">\n        <div className=\"w-full h-24 flex justify-center align-end\">\n          <Link to=\"/\">\n            <button\n              className=\"transition duration-300 hover:bg-orange_color mt-12 text-2xl bg-primary_color px-4 py-1 shadow-md rounded\"\n              type=\"button\"\n              data-testid=\"btn-go-home\"\n            >\n              Home\n            </button>\n          </Link>\n        </div>\n        <div\n          className=\"flex flex-col items-center bg-primary_color\n          shadow-lg min-w-1/4 min-h-1/4 max-h-3/5 rounded-lg overflow-y-auto\"\n        >\n          <img className=\"w-40 mt-8\" src={triviaBigodesLogo} alt=\"Logo trivia Bigodes\" />\n          <section className=\"mt-4 text-2xl font-semibold\tunderline\" data-testid=\"ranking-title\">\n            Ranking\n          </section>\n          <table className=\"min-w-3/4 my-8 ml-8 mr-8\">\n            <thead>\n              <tr className=\"\">\n                <th className=\"py-4\">Avatar</th>\n                <th>Name</th>\n                <th>Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.handlesort().map((element, index) => {\n                const { name, score, picture } = element;\n                return (\n                  <tr key={index} className=\"\">\n                    <td className=\"py-2\">\n                      <img className=\"rounded-3xl\" src={picture} alt={name} />\n                    </td>\n                    <td className=\"text-center\" data-testid={`player-name-${index}`}>\n                      {name}\n                    </td>\n                    <td className=\"text-center\" data-testid={`player-score-${index}`}>\n                      {score}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Config from './pages/Config';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/config\" component={ Config } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route exact path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </div>\n  );\n}\n","import { ADD_IMG_URL, ADD_USER_INFO } from '../actions';\n\nconst INITIAL_STATE = {\n  picture: 'https://www.kindpng.com/picc/m/22-223863_no-avatar-png-circle-transparent-png.png',\n  user: '',\n  email: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_IMG_URL:\n    return { ...state, picture: action.payload };\n  case ADD_USER_INFO:\n    return { ...state, user: action.payload.username, email: action.payload.email };\n  default:\n    return { ...state };\n  }\n};\n\nexport default userReducer;\n","import { CHANGE_CONFIG } from '../actions';\n\nconst INITIAL_STATE = {\n  category: 'any',\n  difficulty: 'any',\n  type: 'any',\n\n};\n\nconst configReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CHANGE_CONFIG:\n    return { ...state, [action.payload.name]: action.payload.value };\n  default:\n    return { ...state };\n  }\n};\n\nexport default configReducer;\n","import { ADD_TOKEN } from '../actions';\n\nexport const INITIAL_STATE = {\n  tokenUser: '',\n};\n\nexport function loginReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_TOKEN:\n    return {\n      ...state,\n      tokenUser: action.token,\n    };\n  default:\n    return state;\n  }\n}\n","import {\n  ADD_QUESTION,\n  REQUEST_API,\n  SUBTRACT_TIMER,\n  UPDATE_ID,\n  UPDATE_POINTS,\n  TOTAL_SCORE,\n  RESET_SOMETHING } from '../actions';\n\nexport const INITIAL_STATE = {\n  question: '',\n  loading: true,\n  id: 0,\n  timer: 30,\n  score: 0,\n  totalScore: 0,\n  assertions: 0,\n};\n\nexport function questReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_API:\n    return { ...state,\n      loading: action.loading,\n    };\n  case ADD_QUESTION:\n    return {\n      ...state,\n      question: action.question,\n      loading: action.loading,\n    };\n  case SUBTRACT_TIMER:\n    return { ...state,\n      timer: action.timer,\n    };\n  case RESET_SOMETHING:\n    return {\n      ...state,\n      ...action.payload,\n    };\n  case UPDATE_ID:\n    return { ...state, id: action.id };\n\n  case UPDATE_POINTS:\n    return {\n      ...state,\n      score: action.score,\n      assertions: state.assertions + 1,\n    };\n  case TOTAL_SCORE:\n    return {\n      ...state,\n      totalScore: state.totalScore + action.score,\n      assertions: state.assertions + 1,\n    };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport configReducer from './configReducer';\nimport { loginReducer } from './loginReducer';\nimport { questReducer } from './questReducer';\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  userReducer,\n  questReducer,\n  configReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}